//https://www.cnblogs.com/grandyang/p/4464476.html
#include<iostream>
#include<stack>
#include<vector>
#include<queue>
#include<cmath>
#include<string>
#include<algorithm>
#include<functional>
#include <stdio.h>
#include <stdint.h>
using namespace std;
void help(string s,int left,int right,int& start,int& maxlen)
{
    while(left>=0 && right<s.size() && s[left]==s[right])
    {
        left--;right++;
    }
    if(maxlen<right-left-1)
    {
        start=left+1;
        maxlen=right-left-1;
    }
}
string longest_palindrome_substring(string s) 
{
    if(s.size()<2) return s;
    int n=s.size();
    int maxlen=0,start=0;
    for(int i=0;i<n-1;i++)
    {
        help(s,i,i,start,maxlen);
        help(s,i,i+1,start,maxlen);
    }
    return s.substr(start,maxlen);
}

int main()
{
    string s="babad";
    cout<<longest_palindrome_substring(s);
    return 0;
}
